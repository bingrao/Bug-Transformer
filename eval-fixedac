public void create ( ) { Ident1 = new TYPE1 ( 0 , 0 , false ) ; Ident2 = new TYPE2 ( ) ; input . METHOD1 ( Ident1 ) ; container = new TYPE3 ( null , 0 , 0 ) ; Ident1 . METHOD2 ( container ) ; TYPE3 VAR2 = new TYPE3 ( null , 0 , 0 ) ; TYPE4 VAR3 = new TYPE4 ( null , Ident1 , table , 0 , 0 ) ; container . add ( VAR1 ) . METHOD3 ( true , true ) . METHOD4 ( true , true ) ; table . layout . parse ( STRING1 ) ; for ( int VAR4 = 0 ; i < INT1 ; i ++ ) { table . row ( ) ; table . add ( new Label ( null , ( i + STRING2 ) , new TYPE5 . Label . TYPE6 ( Ident2 , Color . Ident3 ) ) ) . METHOD3 ( true , false ) . METHOD4 ( true , false ) ; table . add ( new Label ( null , ( i + STRING3 ) , new TYPE5 . Label . TYPE6 ( Ident2 , Color . Ident3 ) ) ) ; table . add ( new Label ( null , ( i + STRING4 ) , new TYPE5 . Label . TYPE6 ( Ident2 , Color . Ident3 ) ) ) ; } container . row ( ) ; container . add ( new Label ( null , STRING5 , new TYPE5 . Label . TYPE6 ( Ident2 , Color . Ident4 ) ) ) . METHOD5 ( 20 , 20 , 20 , 20 ) ; }
public static TYPE1 METHOD1 ( TYPE1 . TYPE2 VAR3 , boolean VAR4 ) { if ( ( type == ( Ident1 . Ident2 ) ) && ( ! VAR1 ) ) { return new TYPE1 ( Ident1 . Ident2 , false , new String [ ] { STRING1 } , new String [ 0 ] , new String [ 0 ] , STRING2 , STRING3 , STRING3 , STRING18 ) ; } if ( ( type == ( Ident1 . Ident2 ) ) && VAR1 ) { return new TYPE1 ( Ident1 . Ident2 , true , new String [ ] { STRING1 } , new String [ 0 ] , new String [ 0 ] , STRING5 , STRING6 , STRING6 , STRING7 ) ; } if ( ( type == ( Ident1 . Ident3 ) ) && ( ! VAR1 ) ) { return new TYPE1 ( Ident1 . Ident3 , false , new String [ ] { STRING1 } , new String [ 0 ] , new String [ 0 ] , STRING8 , STRING9 , STRING9 , STRING10 ) ; } if ( ( type == ( Ident1 . Ident3 ) ) && VAR1 ) { return new TYPE1 ( Ident1 . Ident3 , true , new String [ ] { STRING1 } , new String [ 0 ] , new String [ 0 ] , STRING8 , STRING11 , STRING11 , STRING12 ) ; } if ( type == ( Ident1 . Ident4 ) ) { TYPE1 VAR5 = new TYPE1 ( Ident1 . Ident4 , false , new String [ ] { STRING1 } , new String [ 0 ] , new String [ 0 ] , STRING8 , STRING13 , STRING13 , STRING14 ) ; return VAR2 ; } if ( type == ( Ident1 . Ident5 ) ) { TYPE1 VAR6 = new TYPE1 ( Ident1 . Ident5 , false , new String [ ] { STRING1 } , new String [ 0 ] , new String [ 0 ] , STRING8 , STRING15 , STRING15 , STRING16 ) ; return android ; } throw new RuntimeException ( STRING17 ) ; }